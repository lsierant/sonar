## This is a more complex inventory file. It has a few features on it:
##
## 1. A dockerfile can be a Jinja2 template, like `docker/Dockerfile.template`
## 2. This template dockerfile gets rendered into a concrete Dockerfile in a
##    temp file on disk, using the $(functions.tempfile) function.
## 3. The name of this tempfile is passed further and used by a subsequent
##    stage using the `$(stages['stage-name'].outputs[0].dockerfile)`
##
## To run this inventory you have to:
##
## ./sonar.py --image sonar-test-runner --inventory inventories/inventory-template.yaml
##

vars:
  # start a local registry with:
  # docker run -d -p 5000:5000 --restart=always --name registry registry:2
  registry: localhost:5000

images:
- name: sonar-test-runner

  vars:
    template_context: docker
    context: .

  # First stage builds a Docker image. The resulting image will be
  # pushed to the registry in the `output` section.
  stages:

  - name: template-sonar
    task_type: dockerfile_template
    template_file_extension: 3.10rc  # Template will be `Dockerfile.3.10rc`

    output:
    # We will use $(functions.tempfile) to use a temporary file. The name of the
    # temporary file will have to be accessed using
    # `$(stages['stage-name']).outputs` afterwards.
    - dockerfile: $(functions.tempfile)

  - name: build-sonar-tester-image
    task_type: docker_build

    dockerfile: $(stages['template-sonar'].outputs[0].dockerfile)

    output:
    - registry: $(inputs.params.registry)/sonar-template-test
      tag: $(inputs.params.version_id)
    - registry: $(inputs.params.registry)/sonar-template-test
      tag: latest
